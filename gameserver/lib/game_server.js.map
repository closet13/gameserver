{"version":3,"sources":["../src/game_server.js"],"names":[],"mappings":"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","file":"src/game_server.js","sourcesContent":["var EventEmitter3 = require(\"./../../sharedcode/eventemitter3\").EventEmitter3;\nvar extend = require('util-extend');\nvar needle = require('needle');\nvar fail = require('./../../sharedcode/failmodule');\nvar DBEngine = require('./../../sharedcode/dbengine').DBEngine;\nvar uuid = require('node-uuid');\nvar bodyParser = require('body-parser');\n\nclass GameServer extends EventEmitter3 {\n    constructor(config) {\n        super();\n\n        this._config = {\n            name: 'gameserver 1',\n            location: 'Argentina',\n            description: 'Firs game server!',\n            ip: '192.168.1.106',\n            port: 3001,\n            protocol: 'ws',\n            loginServerUrl: 'http://127.0.0.1:3000',\n            loginServerUrlRegister: '/servers/register',\n            loginServerUrlCheckToken: '/users/check_token',\n            password: 'fad4a46b-dbdd-4ade-a62e-c071bf75e476-10aec1ba-895d-4ce2-a81a-6a0f6bd792c0',\n            serverPassword: uuid.v4() + uuid.v4() + uuid.v4(), //don't change!\n            maxPlayers: 100,\n            dbUrl: 'mongodb://localhost:27017/GameServer',\n            dbCollectionName: 'GameServer3001'\n        };\n        this._config = extend(this._config, config);\n        this._players = [];\n        this.connectDB();\n        this.createServer();\n    }\n\n    connectLoginServer() {\n        needle.put(\n            this._config.loginServerUrl + this._config.loginServerUrlRegister,\n            this._config, {json: true}, (err, resp, body)=> {\n                if (err)\n                    fail.emit('error', err);\n                else {\n                    if (body.result == 'added' || body.result == 'updated') {\n                        this.emit('create')\n                    }\n                }\n\n            });\n\n    }\n\n    createServer() {\n        this.emitpre('create', (err) => {\n            if (err) {\n                fail.emit('error', err);\n            } else {\n                var app = this._app = require('express')();\n                app.use(bodyParser.json());\n                app.use(bodyParser.urlencoded({extended: false}));\n                var http = require('http').Server(app);\n\n                app.get('/', (req, res) => {\n                    res.json({\n                        port: this._config.port,\n                        ip: this._config.ip\n                    });\n                });\n                app.put('/ping', (req, res) => {\n                    res.json(req.body);\n                });\n\n                app.put('/server/start', (req, res)=>this.start(req, res));\n                app.put('/server/stop', (req, res)=>this.stop(req, res));\n\n                http.listen(this._config.port, () => {\n                    console.log('listening on *:' + this._config.port + '\\n' + this._config.serverPassword);\n                    this.connectLoginServer();\n                });\n            }\n        });\n\n    }\n\n    start(req, res) {\n        var result = {started: true};\n        if (req.body.serverPassword == this._config.serverPassword) {\n            this.emitpre('start', (err)=> {\n                if (err) {\n                    fail.emit('error', err);\n                }\n                else {\n                    console.log('started!');\n                    //create socket server.\n\n                    this.emit('start');\n                }\n            });\n\n\n        } else {\n\n            result.started = false;\n        }\n        res.json(result);\n    }\n\n    stop(req, res) {\n        var result = {stopped: true};\n        if (req.body.serverPassword == this._config.serverPassword) {\n            this.emitpre('stop', (err)=> {\n                if (err) {\n                    fail.emit('error', err);\n                }\n                else {\n                    console.log('stopped!');\n                    //stop socket server, disconnect users.\n\n                    this.emit('stop');\n                }\n            });\n        } else {\n\n            result.stopped = false;\n        }\n        res.json(result);\n    }\n\n    connectDB() {\n        var dbengine = new DBEngine(this._config.dbUrl);\n        this._db = {};\n        var userSchema = dbengine.mongoose.Schema({\n            username: {type: String, required: true},\n            token: {type: String},\n            name: {type: String, required: true},\n            meta: {type: dbengine.mongoose.Schema.Types.Mixed}\n        });\n\n        this._db.User = dbengine.mongoose.model(this._config.dbCollectionName, userSchema);\n    }\n}\n\nnew GameServer();"]}