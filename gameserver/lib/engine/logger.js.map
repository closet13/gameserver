{"version":3,"sources":["../../src/engine/logger.js"],"names":[],"mappings":";;;;;;;;;;AAIA,IAAI,KAAK,GAAG,OAAQ,OAAO,CAAC,GAAG,CAAC,KAAK,AAAC,IAAI,QAAQ,GAAG,IAAI,GAAG,KAAK,CAAC;AAClE,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;IAGzB,MAAM;AACG,aADT,MAAM,CACI,IAAI;8BADd,MAAM;;AAEJ,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;yBAHC,MAAM;AAMR,YAAI;mBAAA,cAAC,GAAG,EAAE;AACN,oBAAI,KAAK,EAAE;AACP,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACJ;;;;AAED,YAAI;mBAAA,cAAC,GAAG,EAAE;AACN,oBAAI,KAAK,EAAE;AACP,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC7D;aACJ;;;;AAED,aAAK;;;;;;;;;;;eAAA,UAAC,GAAG,EAAE;AACP,oBAAI,KAAK,EAAE;AACP,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC3D;aACJ;;;;AAED,aAAK;mBAAA,eAAC,GAAG,EAAgB;oBAAd,KAAK,gCAAG,IAAI;;AACnB,oBAAI,KAAK,EAAE;AACP,wBAAI,KAAK,EAAE;AACP,2BAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;qBACvC;AACD,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC1D;aACJ;;;;AAED,mBAAW;mBAAA,qBAAC,GAAG,EAAE,IAAI,EAAE;AACnB,oBAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACrC,6BAAW,CAAC,WAAM,IAAI,WAAM,IAAI,CAAC,IAAI,UAAK,GAAG,CAAG;aACnD;;;;;;WApCC,MAAM;;;AAwCZ,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC","file":"src/engine/logger.js","sourcesContent":["/**\n * Created by santi8ago8 on 09/03/15.\n */\n\nvar debug = typeof (process.env.DEBUG) == 'string' ? true : false;\nvar colors = require('colors/safe');\nvar moment = require('moment');\n\n\nclass Logger {\n    constructor(name) {\n        this.name = name;\n    }\n\n\n    info(msg) {\n        if (debug) {\n            console.log(this.addTemplate(msg, colors.green('info')));\n        }\n    }\n\n    warn(msg) {\n        if (debug) {\n            console.log(this.addTemplate(msg, colors.yellow('warn')));\n        }\n    }\n\n    debug(msg) {\n        if (debug) {\n            console.log(this.addTemplate(msg, colors.blue('debu')));\n        }\n    }\n\n    error(msg, stack = true) {\n        if (debug) {\n            if (stack) {\n                msg = msg + \" \" + new Error().stack;\n            }\n            console.log(this.addTemplate(msg, colors.red('erro')));\n        }\n    }\n\n    addTemplate(msg, type) {\n        var m = new moment().format('HH:mm');\n        return `[${m}] [${type}] [${this.name}] ${msg}`;\n    }\n\n}\n\nmodule.exports.Logger = Logger;"]}