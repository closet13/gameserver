{"version":3,"sources":["../../src/engine/logger.js"],"names":[],"mappings":";;;;;;;;;;;;sBAIc,QAAQ;;;;AACtB,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;IAGzB,MAAM;AACG,aADT,MAAM,CACI,IAAI,EAAE;8BADhB,MAAM;;AAEJ,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;KAClC;;iBAJC,MAAM;;eAMA,kBAAC,IAAI,EAAE,IAAI,EAAE;AACjB,gBAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEnC,gCAAE,OAAO,CAAC,IAAI,EAAE,UAAC,EAAE,EAAI;AACnB,mBAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAChB,CAAC,CAAC;;AAEH,gBAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC7B;;;eAEG,cAAC,GAAG,EAAE;AACN,gBAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SACpC;;;eAGG,cAAC,GAAG,EAAE;;AAEN,gBAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SACpC;;;eAEI,eAAC,GAAG,EAAE;;AAEP,gBAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SACpC;;;eAEI,eAAC,GAAG,EAAgB;gBAAd,KAAK,yDAAG,IAAI;;AACnB,gBAAI,KAAK,EAAE;AACP,mBAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;aACvC;AACD,gBAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAEvD;;;eAEU,qBAAC,IAAI,EAAE;AACd,gBAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACrC,yBAAW,CAAC,WAAM,IAAI,OAAI;SAC7B;;;WA1CC,MAAM;;;AA8CZ,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC","file":"logger.js","sourcesContent":["/**\n * Created by santi8ago8 on 09/03/15.\n */\n\nimport _ from 'lodash';\nvar colors = require('colors/safe');\nvar debug = require('debug');\nvar moment = require('moment');\n\n\nclass Logger {\n    constructor(name) {\n        this.name = name;\n        this.deb = debug('gs:' + name);\n    }\n\n    _process(type, args) {\n        var els = [this.addTemplate(type)];\n\n        _.forEach(args, (it)=> {\n            els.push(it);\n        });\n\n        this.deb.apply(this, els);\n    }\n\n    info(msg) {\n        this._process('info', arguments);\n    }\n\n\n    warn(msg) {\n        //this.deb(this.addTemplate(msg, colors.yellow('warn')));\n        this._process('warn', arguments);\n    }\n\n    debug(msg) {\n        //this.deb(this.addTemplate(msg, colors.blue('debu')));\n        this._process('debu', arguments);\n    }\n\n    error(msg, stack = true) {\n        if (stack) {\n            msg = msg + \" \" + new Error().stack;\n        }\n        this.deb(this.addTemplate(msg, colors.red('erro')));\n\n    }\n\n    addTemplate(type) {\n        var m = new moment().format('HH:mm');\n        return `[${m}] [${type}]`;\n    }\n\n}\n\nmodule.exports.Logger = Logger;"]}