{"version":3,"sources":["../../src/engine/socket.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,UAAC,UAAU,EAAI;;AAEpC,QAAI,EAAE,GAAG,UAAU,CAAC,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEnE,cAAU,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,MAAM,EAAE;AAC9C,eAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;;AAEhC,cAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,IAAI,EAAI;AACxB,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,uBAAW,CAAC,YAAK;AACb,uBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,sBAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;AAE1B,sBAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,KAAK,aAAW,IAAI,AAAE,EAAC,CAAC,CAAC;aAClD,EAAE,IAAI,CAAC,CAAC;SAEZ,CAAC,CAAC;;AAEH,cAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,IAAI,EAAI;AACxB,gBAAI,IAAI,CAAC,UAAU,EAAE;;AAEjB,uBAAO,CACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CACrF,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CACzB,GAAG,CAAC,UAAC,GAAG,EAAE,IAAI,EAAI;AACf,wBAAI,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KACjC;;AAED,4BAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,kCAAU,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAC,EAAE,EAAsB,CAAC,CACrE,IAAI,CAAC,UAAC,GAAG,EAAE,IAAI,EAAI;AAChB,kCAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;yBACnC,CAAC,CAAA;qBACT;iBACJ,CAAC,CAAC;aAEV,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,EAGzB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;AACH,cAAU,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE,IAAI,EAAE;AACvC,eAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;;AAE3C,YAAI,UAAU,CAAC,IAAI,EAAE;AACjB,gBAAI,EAAE,CAAC;AACP,kBAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB,MACI;AACD,gBAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;SACxC;KACJ,CAAC,CAAA;CACL,CAAC","file":"src/engine/socket.js","sourcesContent":["/**\n * Created by santi8ago8 on 06/03/15.\n */\n\nlet request = require('superagent');\n\nmodule.exports.Sockets = (gameServer)=> {\n\n    var io = gameServer._io = require('socket.io')(gameServer._server);\n\n    gameServer._io.on('connection', function (socket) {\n        console.log('a user connected');\n\n        socket.on('hello', (name)=> {\n            console.log(name);\n            setInterval(()=> {\n                console.log(\"emit hello\");\n                socket.emit('helloempty');\n                //TODO. rem\n                socket.emit(\"hello\", {greet: `Hello ${name}`});\n            }, 1000);\n\n        });\n\n        socket.on('login', (data)=> {\n            if (data.playerList) {\n                //go to login server.\n                request\n                    .post(gameServer._config.loginServerUrl + gameServer._config.loginServerUrlCheckToken)\n                    .send({token: data.token})\n                    .end((err, resp)=> {\n                        if (err) gameServer.logger.error(err);\n                        else {\n                            //body.username\n                            let body = data.body;\n                            gameServer._db.Player.find({owner: body.username}, {/*TODO: projection*/})\n                                .exec((err, resp)=> {\n                                    socket.emit('playerList', resp);\n                                })\n                        }\n                    });\n\n            } else if (data.playerId) {\n                //TODO: find the player in the db, check if player is online.\n\n            }\n        });\n    });\n    gameServer._io.use(function (socket, next) {\n        console.log('a user connected middleware');\n        //TODO: check max players.\n        if (gameServer.open) {\n            next();\n            socket.emit('login');\n        }\n        else {\n            next(new Error('Game server close'));\n        }\n    })\n};"]}