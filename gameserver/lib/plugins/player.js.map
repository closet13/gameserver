{"version":3,"sources":["../../src/plugins/player.js"],"names":[],"mappings":"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","file":"player.js","sourcesContent":["/**\r\n * Created by santi8ago8 on 09/03/15.\r\n */\r\n\r\nlet request = require('superagent');\r\nvar Plugin = require('./../plugin').Plugin;\r\nimport PlayerClass from '../engine/player.js';\r\nlet _ = require('lodash');\r\n\r\nclass Player extends Plugin {\r\n    constructor() {\r\n        super();\r\n        this.on('connection', this.connected);\r\n    }\r\n\r\n    enabled(gs) {\r\n        this.logger.info('Player plugin enabled');\r\n        this.gs = gs;\r\n        this.on('s:syncTransform', this.syncTransform.bind(this));\r\n        this.on('s:sync', this.syncVars.bind(this));\r\n\r\n    }\r\n\r\n    emitConnected(socket, p) {\r\n\r\n        let player = new PlayerClass({\r\n            _id: p._id.toString(),\r\n            token: p.token,\r\n            socket: socket,\r\n            data: {\r\n                username: p.username,\r\n                _id: p._id.toString(),\r\n                health: 100\r\n            },\r\n            t: {\r\n                pos: {x: 0, y: 0, z: 0},\r\n                rot: 0\r\n            }\r\n        });\r\n        socket.player = player;\r\n        this.gs._players.push(player);\r\n        this.gs.triggerPlugin('player:enter', player);\r\n\r\n        socket.emit('player', player.data);\r\n        this.gs._io.to('lobby').emit('onlinePlayer', player.data);\r\n\r\n        _.filter(this.gs._players, (el)=> {\r\n            return player._id != el._id;\r\n        }).forEach((el)=> {\r\n            player.socket.emit('onlinePlayer', el.data);\r\n\r\n            socket.emit('syncTransformClient', {\r\n                _id: el._id,\r\n                pos: el.t.pos,\r\n                rot: el.t.rot\r\n            });\r\n        });\r\n\r\n        socket.join('lobby');\r\n\r\n        this.syncHealth(player);\r\n\r\n\r\n    }\r\n\r\n    syncTransform(t) {\r\n        //this.logger.info(t);\r\n        let p = _.find(this.gs._players, {_id: t._id});\r\n        p.t = t;\r\n\r\n        _.filter(this.gs._players, (p)=> {\r\n            return p._id != t._id;\r\n        }).forEach((p)=> {\r\n            p.socket.emit('syncTransformClient', t);\r\n        });\r\n    }\r\n\r\n    connected(socket) {\r\n        this.logger.info('connectedddd!!!');\r\n        socket.on('login', (data)=> {\r\n            request\r\n                .post(this.gs._config.loginServerUrl + this.gs._config.loginServerUrlCheckToken)\r\n                .send({token: data.token})\r\n                .end((err, resp)=> {\r\n                    if (err) this.gs.logger.error(err);\r\n                    else {\r\n                        //body.username\r\n                        let body = resp.body;\r\n                        this.gs._db.Player.findOne({username: body.username}, {/*TODO: projection*/})\r\n                            .exec((err, resp)=> {\r\n                                if (!resp) {\r\n                                    let p = new this.gs._db.Player({\r\n                                        username: body.username,\r\n                                        token: data.token,\r\n                                        meta: {}\r\n                                    }).save((err, player)=> {\r\n\r\n                                            this.emitConnected(socket, player.toObject());\r\n                                        })\r\n                                } else {\r\n                                    this.emitConnected(socket, resp.toObject());\r\n                                }\r\n\r\n                            })\r\n                    }\r\n                });\r\n        });\r\n        socket.on('disconnect', ()=> {\r\n\r\n            if (socket.player) {\r\n                _.remove(this.gs._players, {_id: socket.player._id});\r\n                //emit disconnect, client.\r\n                this.gs._io.emit('deonline', {_id: socket.player._id});\r\n            }\r\n\r\n            socket = null;\r\n        });\r\n    }\r\n\r\n    syncVars(data, player) {\r\n        data.sender = player._id;\r\n\r\n        _.forEach(this.gs._players, (p)=> {\r\n            if (p._id != player._id) {\r\n                //this.logger.debug('to', p._id);\r\n                p.socket.emit('sync', data);\r\n            }\r\n        });\r\n    }\r\n\r\n    syncHealth(player) {\r\n        var data = {\r\n            sender: player._id,\r\n            els: [\r\n                {n: 'health', b: 'PlayerUI', v: player.data.health}\r\n            ]\r\n        };\r\n        this.gs._io.emit('sync', data);\r\n        if (player.data.health <= 0) {\r\n            this.gs._io.emit('die', {_id: player._id});\r\n            setTimeout(()=> {\r\n                this.gs._io.emit('respawn', {_id: player._id});\r\n                player.data.health = 100;\r\n                this.syncHealth(player);\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nPlayer.version = 0.1;\r\n\r\nmodule.exports.Player = Player;"]}